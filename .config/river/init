#!/bin/bash

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

# Super+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal Alt+Shift Return spawn footclient
riverctl map normal Alt P spawn 'dmenu-wl_run -fn "TerminessTTF Nerd Font 18" -nb "#000000" -nf "#ffffff" -sb "#202020" -sf "#ffa500"'
riverctl map normal Alt W spawn qutebrowser
riverclt map normal Alt N spawn "clipman pick -t wofi"
riverctl map normal Alt S spawn 'grim -g "$(slurp)" ~/Images/Shots/$(date +"%s_grim.png")'

# Option to use tofi like dmenu or rofi.
#riverctl map normal Alt P spawn tofi-drun

# Option to use wofi like dmenu or rofi.
riverctl map normal Alt D spawn 'wofi --show'

# Super+Q to close the focused view
riverctl map normal Alt+Shift C close

# Super+Shift+E to exit river
riverctl map normal Alt+Shift E exit

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Alt K focus-view next
riverctl map normal Alt L focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Alt+Shift K swap next
riverctl map normal Alt+Shift L swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Alt Semicolon focus-output next
riverctl map normal Alt Period focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Alt+Shift Semicolon send-to-output next
riverctl map normal Alt+Shift Period send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Alt Return zoom

# Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal Alt J send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal Alt M send-layout-cmd rivertile "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal Alt+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal Alt+Shift L send-layout-cmd rivertile "main-count -1"

# Super+Alt+{H,J,K,L} to move views
#riverctl map normal Alt+Shift H move left 100
#riverctl map normal Alt+Shift J move down 100
#riverctl map normal Alt+Shift K move up 100
#riverctl map normal Alt+Shift L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
#riverctl map normal Alt+Control H snap left
#riverctl map normal Alt+Control J snap down
#riverctl map normal Alt+Control K snap up
#riverctl map normal Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
#riverctl map normal Super+Alt+Shift H resize horizontal -100
#riverctl map normal Super+Alt+Shift J resize vertical 100
#riverctl map normal Super+Alt+Shift K resize vertical -100
#riverctl map normal Super+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Alt BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Alt BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Alt BTN_MIDDLE toggle-float


# This is fo qwerty keyboard layout
#for i in $(seq 1 9)
#do
#    tags=$((1 << ($i - 1)))
#
#    # Super+[1-9] to focus tag [0-8]
#    riverctl map normal Alt $i set-focused-tags $tags
#
#    # Super+Shift+[1-9] to tag focused view with tag [0-8]
#    riverctl map normal Alt+Shift $i set-view-tags $tags
#
#    # Super+Ctrl+[1-9] to toggle focus of tag [0-8]
#    riverctl map normal Alt+Control $i toggle-focused-tags $tags
#
#    # Super+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
#    riverctl map normal Alt+Shift+Control $i toggle-view-tags $tags
#done

# This for my keyboard layout (fr)
# Define an array of keys to use instead of numbers

keys=("ampersand" "eacute" "quotedbl" "apostrophe" "parenleft" "minus" "egrave" "underscore" "ccedilla")

for ((i=0; i<${#keys[@]}; i++))
do
    tags=$((1 << $i))

    # Super+<key> to focus tag [0-8]
    riverctl map normal Alt ${keys[i]} set-focused-tags $tags

    # Super+Shift+<key> to tag focused view with tag [0-8]
    riverctl map normal Alt+Shift ${keys[i]} set-view-tags $tags

    # Super+Ctrl+<key> to toggle focus of tag [0-8]
    riverctl map normal Alt+Control ${keys[i]} toggle-focused-tags $tags

    # Super+Shift+Ctrl+<key> to toggle tag [0-8] of focused view
    riverctl map normal Alt+Shift+Control ${keys[i]} toggle-view-tags $tags
done

#
#
# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+Space to toggle float
riverctl map normal Alt Space toggle-float

# Super+F to toggle fullscreen
riverctl map normal Alt F toggle-fullscreen

# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Alt Up    send-layout-cmd rivertile "main-location top"
riverctl map normal Alt Right send-layout-cmd rivertile "main-location right"
riverctl map normal Alt Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal Alt Left  send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with light (https://github.com/haikarainen/light)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'light -A 5'
    riverctl map $mode None XF86MonBrightnessDown spawn 'light -U 5'
done

# Set the resolution
#riverctl spawn "wlr-randr --output Virtual-1 --mode 1920x1080"
riverctl spawn "wlr-randr --output LVDS1 --primary --mode 1366x768 --pos 0x312 --rotate normal --output HDMI1 --mode 1920x1080 --pos 1366x0 --rotate normal"
riverctl spawn "wbg wall/city.jpg"
riverctl spawn "foot --server"
riverctl spawn "wl-paste -t text --watch clipman store"

# Set background and border color
#riverctl background-color 0x93a1a1
riverctl border-color-focused 0x1e90ff
riverctl border-color-unfocused 0x202020
riverctl border-width 1

# Set keyboard repeat rate
riverctl keyboard-layout -options "caps:escape" fr
riverctl set-repeat 50 300

# Touchpad
riverctl input pointer-2-7-SynPS/2_Synaptics_TouchPad tap enabled
riverctl focus-follows-cursor normal

# Sand Bar
riverctl spawn "$HOME/.config/river/status"
riverctl spawn "$HOME/.config/river/bar"

# Make certain views start floating
riverctl float-filter-add app-id float
riverctl float-filter-add title "popup title with spaces"

# Set app-ids and titles of views which should use client side decorations
riverctl csd-filter-add app-id "gedit"

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 2 -outer-padding 2 &

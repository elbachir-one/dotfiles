# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod1
# Home row direction keys, like vim
set $left k
set $down j
set $up m
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu-wl_path | dmenu-wl_run -fn "TerminessTTF Nerd Font 18" -nb "#000000" -nf "#ffffff" -sb "#202020" -sf "#ffa500" | xargs swaymsg exec --

# Clipboard
exec wl-paste -t text --watch clipman store

# Option to use tofi like dmenu.
# set $menu tofi-drun | xargs swaymsg exec --

# Option to use Wofi and not dmenu-wl
# set $menu wofi --show | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)

output * bg /home/sh/wall/city.jpg fill

#
# Example configuration:
#
output LVDS1 resolution 1366x768 pos 0,0
output HDMI1 resolution 1920x1080 pos 1366,0

# focus output HDMI1

#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
   input "2:7:SynPS/2_Synaptics_TouchPad" {
       dwt enabled
       tap enabled
       natural_scroll enabled
       middle_emulation enabled
   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Shift+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+c kill

    # Start your launcher
    bindsym $mod+p exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+q reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
	
	# Clipboard Manager
	bindsym $mod+n exec clipman pick -t wofi

	# Launch QuteBrowser
	bindsym $mod+w exec qutebrowser
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces: are configured to my keyboard layout
#
    # Switch to workspace
    bindsym $mod+ampersand  workspace number 1
    bindsym $mod+eacute     workspace number 2
    bindsym $mod+quotedbl   workspace number 3
    bindsym $mod+apostrophe workspace number 4
    bindsym $mod+parenleft  workspace number 5
    bindsym $mod+minus      workspace number 6
    bindsym $mod+egrave     workspace number 7
    bindsym $mod+underscore workspace number 8
    bindsym $mod+ccedilla   workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+ampersand  move container to workspace number 1
    bindsym $mod+Shift+eacute     move container to workspace number 2
    bindsym $mod+Shift+quotedbl   move container to workspace number 3
    bindsym $mod+Shift+apostrophe move container to workspace number 4
    bindsym $mod+Shift+parenleft  move container to workspace number 5
    bindsym $mod+Shift+minus      move container to workspace number 6
    bindsym $mod+Shift+egrave     move container to workspace number 7
    bindsym $mod+Shift+underscore move container to workspace number 8
    bindsym $mod+Shift+ccedilla   move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
	workspace 1 output LVDS1
	workspace 2 output LVDS1
	workspace 3 output LVDS1
	workspace 4 output LVDS1
	workspace 5 output LVDS1
	workspace 6 output HDMI1
	workspace 7 output HDMI1
	workspace 8 output HDMI1
	workspace 9 output HDMI1
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+h splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+t layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Shift+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+s move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+s scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #000000
#        inactive_workspace #00000000 #00000000 #938ed8
#    }
#}

bar {
     swaybar_command waybar
	 }

default_border pixel 1
gaps outer 2
gaps inner 2

input * {
	xkb_layout "fr"
	xkb_options "caps:escape"
	}

exec_always --no-startup-id foot &

include /etc/sway/config.d/*
